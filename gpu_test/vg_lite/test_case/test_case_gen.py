"""
Copyright (C) 2025 Xiaomi Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import sys
import os
import re

def generate_test_case_file(test_case_name):
    # Define the template and output file names
    template_file = '_vg_lite_test_case_template.c'
    output_file = f'vg_lite_test_case_{test_case_name}.c'

    # Check if the template file exists
    if not os.path.exists(template_file):
        print(f"Template file '{template_file}' does not exist.")
        return

    # Check if the output file already exists
    if os.path.exists(output_file):
        response = input(f"File '{output_file}' already exists. Do you want to overwrite it? (yes/no): ")
        if response.lower() != 'yes':
            print("Operation canceled.")
            return

    # Read the content of the template file and perform the replacement
    with open(template_file, 'r', encoding='utf-8') as file:
        template_content = file.read()

    # Replace all occurrences of "template" with the user-specified name
    updated_content = template_content.replace('template', test_case_name)

    # Write the updated content to the new test file
    with open(output_file, 'w', encoding='utf-8') as file:
        file.write(updated_content)

    print(f"Test file generated: {output_file}")

def update_inc_file():
    inc_file = 'vg_lite_test_case.inc'

    # Generate the header comment
    header_comment = (
        "/**\n"
        " * This file is auto-generated by test_case_gen.py. Do not modify manually.\n"
        " */\n"
    )

    # Gather ITEM_DEF entries
    item_defs = []
    pattern = re.compile(r'vg_lite_test_case_(\w+)\.c$')

    for filename in os.listdir('.'):
        match = pattern.match(filename)
        if match:
            item_defs.append(f"ITEM_DEF({match.group(1)})")

    # Sort the entries by name
    item_defs = sorted(item_defs, key=lambda x: x.split('(')[1][:-1])
    print(f"Found {len(item_defs)} test cases:")
    for item_def in item_defs:
        print(f"  {item_def}")

    # Write to the .inc file
    with open(inc_file, 'w', encoding='utf-8') as file:
        file.write(header_comment)
        for item_def in item_defs:
            file.write(f"{item_def}\n")

    print(f"Updated {inc_file} with ITEM_DEF entries.")

if __name__ == "__main__":
    # Check the number of command line arguments
    if len(sys.argv) > 2 or (len(sys.argv) == 2 and sys.argv[1] == '-h'):
        print("Usage: python test_case_gen.py [<test_name>]")
        sys.exit(1)

    # Get the test name from the command line argument if provided
    test_case_name = sys.argv[1] if len(sys.argv) == 2 else None

    if test_case_name:
        generate_test_case_file(test_case_name)

    update_inc_file()  # Only refresh the inc file if no test_case_name is provided
